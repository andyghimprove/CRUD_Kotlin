<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.16</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.andygomez</groupId>
    <artifactId>newcrud</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>newcrud</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>11</java.version>
        <kotlin.version>1.6.21</kotlin.version>
        <dgs.version>4.8.0</dgs.version>
        <dgs-codegen-client.version>5.1.2</dgs-codegen-client.version>
        <graphqlcodegen-maven-plugin.version>1.11</graphqlcodegen-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.netflix.graphql.dgs</groupId>
                <artifactId>graphql-dgs-platform-dependencies</artifactId>
                <version>${dgs.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>

        <dependency>
            <groupId>com.netflix.graphql.dgs</groupId>
            <artifactId>graphql-dgs-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.netflix.graphql.dgs.codegen</groupId>
            <artifactId>graphql-dgs-codegen-client-core</artifactId>
            <version>${dgs-codegen-client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>generate-kotlin-graphql-types</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                config = new com.netflix.graphql.dgs.codegen.CodeGenConfig(
                                        [] as Set, // schemas
                                        [new java.io.File("src/main/resources/schema")] as Set, // schemaFiles
                                        java.nio.file.Paths.get("target/generated-sources/graphql"), // outputDir
                                        java.nio.file.Paths.get("generated-examples"), // examplesOutputDir
                                        true, // writeToFiles
                                        "com.andygomez.newcrud.generated.graphql", // packageName
                                        "client", // subPackageNameClient
                                        "datafetchers", // subPackageNameDatafetchers
                                        "types", // subPackageNameTypes
                                        com.netflix.graphql.dgs.codegen.Language.KOTLIN, // language
                                        false, // generateBoxedTypes
                                        true, // generateClientApi
                                        false, // generateInterfaces
                                        [], // typeMapping
                                        [] as Set, // includeQueries
                                        [] as Set, // includeMutations
                                        [] as Set, // includeSubscriptions
                                        false, // skipEntityQueries
                                        false, // shortProjectionNames
                                        true, // generateDataTypes
                                        false, // omitNullInputFields
                                        10, // maxProjectionDepth
                                        true, // kotlinAllFieldsOptional
                                        false, // snakeCaseConstantNames
                                        false // generateInterfaceSetters
                                )
                                codeGen = new com.netflix.graphql.dgs.codegen.CodeGen(config)
                                codeGen.generate()
//                                config = new com.netflix.graphql.dgs.codegen.CodeGenConfig(
//                                        [] as Set, // schemas
//                                        [new java.io.File("src/main/resources/schema")] as Set, // schemaFiles
//                                        [],
//                                        java.nio.file.Paths.get("target/generated-sources/graphql"), // outputDir
//                                        java.nio.file.Paths.get("generated-examples"), // examplesOutputDir
//                                        true, // writeToFiles
//                                        "com.andygomez.newcrud", // packageName
//                                        "client", // subPackageNameClient
//                                        "datafetchers", // subPackageNameDatafetchers
//                                        "types", // subPackageNameTypes
//                                        "docs",
//                                        com.netflix.graphql.dgs.codegen.Language.KOTLIN, // language
//                                        false, // generateBoxedTypes
//                                        false,
//                                        true, // generateClientApi
//                                        false,
//                                        false, // generateInterfaces
//                                        false,
//                                        false,
//                                        [], // typeMapping
//                                        [] as Set, // includeQueries
//                                        [] as Set, // includeMutations
//                                        [] as Set, // includeSubscriptions
//                                        false, // skipEntityQueries
//                                        false, // shortProjectionNames
//                                        true, // generateDataTypes
//                                        false, // omitNullInputFields
//                                        10, // maxProjectionDepth
//                                        true, // kotlinAllFieldsOptional
//                                        false, // snakeCaseConstantNames
//                                        false, // generateInterfaceSetters
//                                        false,
//                                        false,
//                                        java.nio.file.Paths.get("generated-docs"),
//                                        [] as Set,
//                                        [] as Set,
//                                        [] as Set,
//                                        false,
//                                        true,
//                                        false,
//                                        false,
//                                        false
//                                )
//                                codeGen = new com.netflix.graphql.dgs.codegen.CodeGen(config)
//                                codeGen.generate()
                            </source>
                        </configuration>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>com.netflix.graphql.dgs.codegen</groupId>
                        <artifactId>graphql-dgs-codegen-core</artifactId>
                        <version>${graphql-dgs-codegen-core.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile-generated-kotlin-graphql-types</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/graphql</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/graphql</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>


